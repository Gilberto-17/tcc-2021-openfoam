/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "$FOAM_CASE/constant/parameters"

r           #calc "0.5*$d";
ang         45.0;

c_ratio     0.75;

x_cemax     #calc "$r*cos(degToRad($ang))";
x_cemin     #calc "-1.0*$x_cemax";
y_cemax     #calc "$r*sin(degToRad($ang))";
y_cemin     #calc "-1.0*$y_cemax";

x_cimax     #calc "$c_ratio*$x_cemax";
x_cimin     #calc "-1*$x_cimax";
y_cimax     #calc "$c_ratio*$y_cemax";
y_cimin     #calc "-1*$y_cimax";

border      0.50;
top_border  #calc "2*$border";

b_ratio     #calc "1./3";

x_bemax     $border;
x_bemin     #calc "-1.0*$border";
y_bemax     $border;
y_bemin     #calc "-1.0*$border";

x_bimax     #calc "$b_ratio*$x_bemax";
x_bimin     #calc "-1*$x_bimax";
y_bimax     #calc "$b_ratio*$y_bemax";
y_bimin     #calc "-1*$y_bimax";

y_tb        #calc "$border+$top_border";

m1          6;              // Angular
m2          5;              // Radial do cilindro
m3          #calc "2*$m1";  // Radial da proximidade
m4s         $m1;            // Normal à borda, S
m4n         $m4s;           // Normal à borda, N
m4w         $m4s;           // Normal à borda, W
m4e         $m4s;           // Normal à borda, E
m5          #calc "3*$m4s"; // Normal ao topo
m6          30;             // Axial

g1          1;
g2          0.5;
g3          25;
g4s         1;
g4n         $g4s;
g4w         $g4s;
g4e         $g4s;
g5          $g4s;
g6          15;

convertToMeters 1;

vertices
(
// Layer 1
    name A1 ($x_cimin   $y_cimin    0)
    name B1 ($x_cimax   $y_cimin    0)
    name C1 ($x_cimax   $y_cimax    0)
    name D1 ($x_cimin   $y_cimax    0)
    name E1 ($x_cemin   $y_cemin    0)
    name F1 ($x_cemax   $y_cemin    0)
    name G1 ($x_cemax   $y_cemax    0)
    name H1 ($x_cemin   $y_cemax    0)
    name I1 ($x_bimin   $y_bimin    0)
    name J1 ($x_bimax   $y_bimin    0)
    name K1 ($x_bimax   $y_bimax    0)
    name L1 ($x_bimin   $y_bimax    0)
    name M1 ($x_bemin   $y_bemin    0)
    name N1 ($x_bemax   $y_bemin    0)
    name O1 ($x_bemax   $y_bemax    0)
    name P1 ($x_bemin   $y_bemax    0)
    name Q1 ($x_bemin   $y_bimin    0)
    name R1 ($x_bemax   $y_bimin    0)
    name S1 ($x_bemax   $y_bimax    0)
    name T1 ($x_bemin   $y_bimax    0)
    name U1 ($x_bimin   $y_bemin    0)
    name V1 ($x_bimax   $y_bemin    0)
    name W1 ($x_bimax   $y_bemax    0)
    name X1 ($x_bimin   $y_bemax    0)
    name a1 ($x_bemin   $y_tb       0)
    name b1 ($x_bimin   $y_tb       0)
    name c1 ($x_bimax   $y_tb       0)
    name d1 ($x_bemax   $y_tb       0)

// Layer 2
    name A2 ($x_cimin   $y_cimin    $L)
    name B2 ($x_cimax   $y_cimin    $L)
    name C2 ($x_cimax   $y_cimax    $L)
    name D2 ($x_cimin   $y_cimax    $L)
    name E2 ($x_cemin   $y_cemin    $L)
    name F2 ($x_cemax   $y_cemin    $L)
    name G2 ($x_cemax   $y_cemax    $L)
    name H2 ($x_cemin   $y_cemax    $L)
    name I2 ($x_bimin   $y_bimin    $L)
    name J2 ($x_bimax   $y_bimin    $L)
    name K2 ($x_bimax   $y_bimax    $L)
    name L2 ($x_bimin   $y_bimax    $L)
    name M2 ($x_bemin   $y_bemin    $L)
    name N2 ($x_bemax   $y_bemin    $L)
    name O2 ($x_bemax   $y_bemax    $L)
    name P2 ($x_bemin   $y_bemax    $L)
    name Q2 ($x_bemin   $y_bimin    $L)
    name R2 ($x_bemax   $y_bimin    $L)
    name S2 ($x_bemax   $y_bimax    $L)
    name T2 ($x_bemin   $y_bimax    $L)
    name U2 ($x_bimin   $y_bemin    $L)
    name V2 ($x_bimax   $y_bemin    $L)
    name W2 ($x_bimax   $y_bemax    $L)
    name X2 ($x_bimin   $y_bemax    $L)
    name a2 ($x_bemin   $y_tb       $L)
    name b2 ($x_bimin   $y_tb       $L)
    name c2 ($x_bimax   $y_tb       $L)
    name d2 ($x_bemax   $y_tb       $L)
);

blocks
(
// Cyilnder
    hex (A1 B1 C1 D1 A2 B2 C2 D2) ($m1 $m1 $m6) simpleGradind ($g1 $g1 $g6) //q1 ABCD
    
    hex (D1 C1 G1 H1 D2 C2 G2 H2) ($m1 $m2 $m6) simpleGradind ($g1 $g2 $g6) //q2 DCGH
    hex (C1 B1 F1 G1 C2 B2 F2 G2) ($m1 $m2 $m6) simpleGradind ($g1 $g2 $g6) //q3 CBFG
    hex (B1 A1 E1 F1 B2 A2 E2 F2) ($m1 $m2 $m6) simpleGradind ($g1 $g2 $g6) //q4 BAEF
    hex (A1 D1 H1 E1 A2 D2 H2 E2) ($m1 $m2 $m6) simpleGradind ($g1 $g2 $g6) //q5 ADHE
    
// Border    
    hex (H1 G1 K1 L1 H2 G2 K2 L2) ($m1 $m3 $m6) simpleGradind ($g1 $g3 $g6) //q6 HGKL
    hex (G1 F1 J1 K1 G2 F2 J2 K2) ($m1 $m3 $m6) simpleGradind ($g1 $g3 $g6) //q7 GFJK
    hex (F1 E1 I1 J1 F2 E2 I2 J2) ($m1 $m3 $m6) simpleGradind ($g1 $g3 $g6) //q8 FEIJ
    hex (E1 H1 L1 I1 E2 H2 L2 I2) ($m1 $m3 $m6) simpleGradind ($g1 $g3 $g6) //q9 EHLI
    
    hex (L1 K1 W1 X1 L2 K2 W2 X2) ($m1 $m4n $m6) simpleGradind ($g1 $g4n $g6) //q10 LKWX
    hex (K1 J1 R1 S1 K2 J2 R2 S2) ($m1 $m4e $m6) simpleGradind ($g1 $g4e $g6) //q11 KJRS
    hex (J1 I1 U1 V1 J2 I2 U2 V2) ($m1 $m4s $m6) simpleGradind ($g1 $g4s $g6) //q12 JIUV
    hex (I1 L1 T1 Q1 I2 L2 T2 Q2) ($m1 $m4w $m6) simpleGradind ($g1 $g4w $g6) //q13 ILTQ
    
    hex (I1 Q1 M1 U1 I2 Q2 M2 U2) ($m4w $m4s $m6) simpleGradind ($g4w $g4s $g6) //q14 IQMU
    hex (L1 X1 P1 T1 L2 X2 P2 T2) ($m4n $m4w $m6) simpleGradind ($g4n $g4w $g6) //q15 LXPT
    hex (K1 S1 O1 W1 K2 S2 O2 W2) ($m4e $m4n $m6) simpleGradind ($g4e $g4n $g6) //q16 KSOW
    hex (J1 V1 N1 R1 J2 V2 N2 R2) ($m4s $m4e $m6) simpleGradind ($g4s $g4e $g6) //q17 JVNR
    
    hex (X1 b1 a1 P1 X2 b2 a2 P2) ($m5 $m4w $m6) simpleGradind ($g5 $g4w $g6) //q18 XbaP
    hex (X1 W1 c1 b1 X2 W2 c2 b2) ($m1 $m5 $m6) simpleGradind ($g1 $g5 $g6) //q19 XWcb
    hex (W1 O1 d1 c1 W2 O2 d2 c2) ($m4e $m5 $m6) simpleGradind ($g4e $g5 $g6) //q20 WOdc
);

edges
(
    arc A1 B1 45    (0 0 1)
    arc A2 B2 45    (0 0 1)
    arc B1 C1 45    (0 0 1)
    arc B2 C2 45    (0 0 1)
    arc C1 D1 45    (0 0 1)
    arc C2 D2 45    (0 0 1)
    arc D1 A1 45    (0 0 1)
    arc D2 A2 45    (0 0 1)

    arc G1 H1 90    (0 0 1)
    arc G2 H2 90    (0 0 1)
    arc H1 E1 90    (0 0 1)
    arc H2 E2 90    (0 0 1)
    arc E1 F1 90    (0 0 1)
    arc E2 F2 90    (0 0 1)
    arc F1 G1 90    (0 0 1)
    arc F2 G2 90    (0 0 1)

    arc K1 L1 45    (0 0 1)
    arc K2 L2 45    (0 0 1)
    arc L1 I1 45    (0 0 1)
    arc L2 I2 45    (0 0 1)
    arc I1 J1 45    (0 0 1)
    arc I2 J2 45    (0 0 1)
    arc J1 K1 45    (0 0 1)
    arc J2 K2 45    (0 0 1)
);

boundary
(
    cylinderBottom
    {
        type	wall;
        faces
        (
            (A1 B1 C1 D1)
            (D1 C1 G1 H1)
            (C1 B1 F1 G1)
            (B1 A1 E1 F1)
            (A1 D1 H1 E1)
        );
	}
	cylinderTop
	{
		type	wall;
		faces
		(
            (A2 B2 C2 D2)
            (D2 C2 G2 H2)
            (C2 B2 F2 G2)
            (B2 A2 E2 F2)
            (A2 D2 H2 E2)
		);
	}
	westBorder
	{
		type	wall;
		faces
		(
            (M1 Q1 M2 Q2)
            (Q1 T1 Q2 T2)
            (T1 P1 T2 P2)
            (P1 a1 P2 a2)
		);
	}
	eastBorder
	{
		type	wall;
		faces
		(
            (N1 R1 N2 R2)
            (R1 S1 R2 S2)
            (S1 O1 S2 O2)
            (O1 d1 O2 d2)
		);
	}
	southBorder
	{
		type	wall;
		faces
		(
            (M1 U1 M2 U2)
            (U1 V1 U2 V2)
            (V1 N1 V2 N2)
		);
	}
	northBorder
	{
		type	wall;
		faces
		(
            (a1 b1 a2 b2)
            (b1 c1 b2 c2)
            (c1 d1 c2 d2)
		);
	}
	bottomBorder
	{
		type	wall;
		faces
		(
            (H1 G1 K1 L1)
            (G1 F1 J1 K1)
            (F1 E1 I1 J1)
            (E1 H1 L1 I1)
            (L1 K1 W1 X1)
            (K1 J1 R1 S1)
            (J1 I1 U1 V1)
            (I1 L1 T1 Q1)
            (I1 Q1 M1 U1)
            (L1 X1 P1 T1)
            (K1 S1 O1 W1)
            (J1 V1 N1 R1)
            (X1 b1 a1 P1)
            (X1 W1 c1 b1)
            (W1 O1 d1 c1)
		);
	}
	topBorder
	{
		type	wall;
		faces
		(
            (H2 G2 K2 L2)
            (G2 F2 J2 K2)
            (F2 E2 I2 J2)
            (E2 H2 L2 I2)
            (L2 K2 W2 X2)
            (K2 J2 R2 S2)
            (J2 I2 U2 V2)
            (I2 L2 T2 Q2)
            (I2 Q2 M2 U2)
            (L2 X2 P2 T2)
            (K2 S2 O2 W2)
            (J2 V2 N2 R2)
            (X2 b2 a2 P2)
            (X2 W2 c2 b2)
            (W2 O2 d2 c2)
		);
	}
	
);

mergewallPairs
(
);

// ************************************************************************* //
